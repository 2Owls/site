/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useThree } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { useSpring } from '@react-spring/three'


export default function Model(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/homera_room.glb')
  const { camera } = useThree()
  useSpring(
    () => ({
      from: { y: camera.position.y + 5 },
      to: { y: camera.position.y },
      config: { friction: 100 },
      onChange: ({ value }) => ((camera.position.y = value.y), camera.lookAt(0, 0, 0)),
    }),
    [],
  )  
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[10.42, -26.81, -1.37]} rotation={[0, 1.57, 0]}>
        <group position={[0, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.picture_r.geometry}
            material={materials.pic}
            position={[43.9, 58.59, -70.55]}
            rotation={[0, -1.57, 0]}      
          /> 
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.curtain.geometry}
            material={materials.curtainL}
            position={[-59.48, 43.25, 45.1]}
            rotation={[-1.57, -1.56, -1.57]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.picture_l.geometry}
            material={materials.pic_l}
            position={[-7.97, 58.59, -70.55]}
            rotation={[0, -1.57, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.curtain1.geometry}
            material={materials.curtainR}
            position={[-59.73, 43.25, -23.12]}
            rotation={[-Math.PI / 2, -1.55, -Math.PI / 2]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lamp_shade.geometry}
            material={materials.lampShade}
            position={[-41.91, 43.14, 70.82]}
            rotation={[0, -1.4, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.smart_meter.geometry}
            material={materials.smart}
            position={[86.11, -10.42, -52.22]}
            rotation={[0, -0.87, -1.4]}          
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lightbulb.geometry}
            material={materials.lightbulb}
            position={[-41.89, 43.44, 70.81]}
            rotation={[0, -1.57, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.curtain_rail.geometry}
            material={materials.curtainRail}
            position={[-60.72, 89.65, 9.31]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.window_top.geometry}
            material={materials.windowTop}
            position={[-74.32, 66.53, 8.72]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.table.geometry}
            material={materials.table}
            position={[-1.37, 26.81, -10.42]}
            rotation={[0, -1.57, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.cushion_right.geometry}
            material={materials.cushionR}
            position={[46.48, -4.78, -58.22]}
            rotation={[-1.19, -1.46, -0.84]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.cushion_left.geometry}
            material={materials.cushionL}
            position={[-12.86, -4.78, -53.5]}
            rotation={[0.01, -0.83, 0.48]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.window_bottom.geometry}
            material={materials.windowBottom}
            position={[-69.46, 26.27, 8.72]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.tv.geometry}
            material={materials.tv}
            position={[17.89, -3.77, 68.81]}
            rotation={[0, -1.57, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.tv_stand.geometry}
            material={materials.tvStand}
            position={[17.91, -28.05, 69.38]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.rug.geometry}
            material={materials.rug}
            position={[17.85, -34.3, 8.51]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.radiator.geometry}
            material={materials.radiator}
            position={[-58.84, -25.79, 36.87]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.planks.geometry}
            material={materials.planks}
            position={[17.86, -37.49, 8.76]}
            rotation={[0, -1.57, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.floor_base.geometry}
            material={materials.floor}
            position={[9.01, -46.84, 0.08]}
            rotation={[0, -1.57, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.outer_wall.geometry}
            material={materials.outer}
            position={[-1.37, 26.81, -10.42]}
            rotation={[0, -1.57, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.room1.geometry}
            material={materials.room}
            position={[8.96, 41, -0.18]}
            rotation={[0, -1.57, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.sofa.geometry}
            material={materials.sofa}
            position={[17.77, -11.29, -56.18]}
            rotation={[0, -1.57, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.sofa_cushions.geometry}
            material={materials.sofaCushions}
            position={[17.93, -7.23, -52.18]}
            rotation={[0, -1.57, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.lamp.geometry}
            material={materials.lamp}
            position={[-41.9, 4.56, 70.82]}
            rotation={[0, -1.57, 0]}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/homera_room.glb')